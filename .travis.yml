language: python

env:
    global:
        - DEPENDS="numpy nibabel"
        - INSTALL_TYPE="pip"
        - EXTRA_WHEELS="https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com"
        - EXTRA_PIP_FLAGS="--find-links=$EXTRA_WHEELS"

python:
    - 3.4
    - 3.5
    - 3.6

matrix:
  include:
#    - python: 2.7
#      env:
#        - COVERAGE=1
#        - DOCTESTS=1
#        - DOC_DOCTEST=1
    # Absolute minimum dependencies
    - python: 2.7
      env:
        - COVERAGE=1
        - DEPENDS="numpy==1.12.1 nibabel==2.1.0"
    - python: 2.7
      env:
        - INSTALL_TYPE=pipe
    - python: 2.7
      env:
        - INSTALL_TYPE=setup
#    - python: 2.7
#      env:
#        - INSTALL_TYPE=sdist
    - python: 2.7
      env:
        - DEPENDS=
        - INSTALL_TYPE=wheel
    - python: 2.7
      env:
        - DEPENDS=
        - INSTALL_TYPE=requirements

before_install:
    - python -m pip install --upgrade pip
    - pip install --upgrade virtualenv
    - virtualenv --python=python venv
    - python --version # just to check
    - source venv/bin/activate
    - pip install nose
    - if [ -n "$DEPENDS" ]; then
        pip install $EXTRA_PIP_FLAGS $DEPENDS;
      fi;
    - if [ "${COVERAGE}" == "1" ]; then
        pip install coverage;
        pip install coveralls;
      fi
    - if [ "${DOC_DOCTEST}" == "1" ]; then
        pip install sphinx;
      fi

install:
    - |
      if [ "$INSTALL_TYPE" == "pip" ]; then
          pip install .
      elif [ "$INSTALL_TYPE" == "pipe" ]; then
          pip install -e .
      elif [ "$INSTALL_TYPE" == "setup" ]; then
          python setup.py install
      elif [ "$INSTALL_TYPE" == "sdist" ]; then
          python setup.py egg_info  # check egg_info while we're here
          python setup.py sdist
          pip install $EXTRA_PIP_FLAGS dist/*.tar.gz
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
          pip install wheel
          python setup.py bdist_wheel
          pip install $EXTRA_PIP_FLAGS dist/*.whl
      elif [ "$INSTALL_TYPE" == "requirements" ]; then
          pip install $EXTRA_PIP_FLAGS -r requirements.txt
          pip install .
      fi
script:
    # Change into an innocuous directory and find tests from installation
    - mkdir for_testing
    - cd for_testing
    - if [ "${COVERAGE}" == "1" ]; then
      cp ../.coveragerc .;
      COVER_ARGS="--with-coverage --cover-package bruker2nifti";
      fi
    - if [ "${DOCTESTS}" == "1" ]; then
      DOCTEST_ARGS="--with-doctest";
      fi
    - nosetests $COVER_ARGS $DOCTEST_ARGS ../test
    - if [ "${DOC_DOCTEST}" == "1" ]; then
      cd ../docs ;
      sphinx-build -b html . _build/html ;
      fi

after_success:
    - if [ "${COVERAGE}" == "1" ]; then coveralls; fi
notifications:
  email: false
